{"version":3,"file":"static/js/26.dc6edac1.chunk.js","mappings":"uMACA,EAAuB,2BAAvB,EAA0D,4B,SCG7CA,EAAe,WAC1B,IAAMC,GAAWC,EAAAA,EAAAA,MAejB,OACE,kBAAMC,UAAWC,EAAUC,SAdR,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,cACfR,GACES,EAAAA,EAAAA,IAAS,CACPC,KAAMH,EAAKI,SAASD,KAAKE,MACzBC,MAAON,EAAKI,SAASE,MAAMD,MAC3BE,SAAUP,EAAKI,SAASG,SAASF,SAGrCL,EAAKQ,OACN,EAGoDC,aAAa,MAAhE,WACE,mBAAOd,UAAWC,EAAlB,sBAEE,kBAAOc,KAAK,OAAOP,KAAK,aAE1B,mBAAOR,UAAWC,EAAlB,mBAEE,kBAAOc,KAAK,QAAQP,KAAK,cAE3B,mBAAOR,UAAWC,EAAlB,sBAEE,kBAAOc,KAAK,WAAWP,KAAK,iBAE9B,mBAAQO,KAAK,SAAb,wBAGL,ECnCc,SAASC,IACtB,OACE,4BACE,6CACA,SAACnB,EAAD,MAGL,C,+HCNDoB,EAAAA,EAAAA,SAAAA,QAAyB,yCAGzB,IAAMC,EAAgB,SAAAC,GACpBF,EAAAA,EAAAA,SAAAA,QAAAA,OAAAA,cAAA,iBAAwDE,EACzD,EAWYZ,GAAWa,EAAAA,EAAAA,IACtB,gBADsC,mCAEtC,WAAOC,EAAaC,GAApB,gGAEsBL,EAAAA,EAAAA,KAAW,gBAAiBI,GAFlD,cAEUE,EAFV,OAIIL,EAAcK,EAAIC,KAAKL,OAJ3B,kBAKWI,EAAIC,MALf,yDAOWF,EAASG,gBAAgB,KAAMC,UAP1C,yDAFsC,yDAkB3BC,GAAQP,EAAAA,EAAAA,IACnB,aADmC,mCAEnC,WAAOC,EAAaC,GAApB,gGAEsBL,EAAAA,EAAAA,KAAW,eAAgBI,GAFjD,cAEUE,EAFV,OAIIL,EAAcK,EAAIC,KAAKL,OAJ3B,kBAKWI,EAAIC,MALf,yDAOWF,EAASG,gBAAgB,KAAMC,UAP1C,yDAFmC,0DAkBfN,EAAAA,EAAAA,IAAiB,cAAD,mCAAgB,WAAOQ,EAAGN,GAAV,0FAE5CL,EAAAA,EAAAA,KAAW,iBAFiC,OA3CpDA,EAAAA,EAAAA,SAAAA,QAAAA,OAAAA,cAA8C,GA2CM,wEAM3CK,EAASG,gBAAgB,KAAMC,UANY,wDAAhB,0DAcXN,EAAAA,EAAAA,IACzB,eADyC,mCAEzC,WAAOQ,EAAGN,GAAV,8EAEQO,EAAQP,EAASQ,WAGA,QAFjBC,EAAiBF,EAAMG,KAAKb,OAHpC,yCAOWG,EAASG,gBAAgB,yBAPpC,uBAYIP,EAAca,GAZlB,SAasBd,EAAAA,EAAAA,IAAU,aAbhC,cAaUM,EAbV,yBAcWA,EAAIC,MAdf,2DAgBWF,EAASG,gBAAgB,KAAMC,UAhB1C,0DAFyC,wD","sources":["webpack://react-homework-template/./src/components/RegisterForm/RegisterForm.module.css?a5d4","components/RegisterForm/RegisterForm.jsx","pages/Register.jsx","redux/auth/authOperations.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"RegisterForm_form__Tv43W\",\"label\":\"RegisterForm_label__4pTXF\"};","import { useDispatch } from 'react-redux';\nimport { register } from 'redux/auth/authOperations';\nimport css from './RegisterForm.module.css';\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    dispatch(\n      register({\n        name: form.elements.name.value,\n        email: form.elements.email.value,\n        password: form.elements.password.value,\n      })\n    );\n    form.reset();\n  };\n\n  return (\n    <form className={css.form} onSubmit={handleSubmit} autoComplete=\"off\">\n      <label className={css.label}>\n        Username\n        <input type=\"text\" name=\"name\" />\n      </label>\n      <label className={css.label}>\n        Email\n        <input type=\"email\" name=\"email\" />\n      </label>\n      <label className={css.label}>\n        Password\n        <input type=\"password\" name=\"password\" />\n      </label>\n      <button type=\"submit\">Register</button>\n    </form>\n  );\n};\n","import { RegisterForm } from 'components/RegisterForm/RegisterForm';\n\nexport default function Register() {\n  return (\n    <div>\n      <title>Registration</title>\n      <RegisterForm />\n    </div>\n  );\n}\n","import axios from 'axios';\nimport { createAsyncThunk } from '@reduxjs/toolkit';\n\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com/';\n\n// Utility to add JWT\nconst setAuthHeader = token => {\n  axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n};\n\n// Utility to remove JWT\nconst clearAuthHeader = () => {\n  axios.defaults.headers.common.Authorization = '';\n};\n\n/*\n * POST @ /users/signup\n * body: { name, email, password }\n */\nexport const register = createAsyncThunk(\n  'auth/register',\n  async (credentials, thunkAPI) => {\n    try {\n      const res = await axios.post('/users/signup', credentials);\n      // After successful registration, add the token to the HTTP header\n      setAuthHeader(res.data.token);\n      return res.data;\n    } catch (error) {\n      return thunkAPI.rejectWithValue(error.message);\n    }\n  }\n);\n\n/*\n * POST @ /users/login\n * body: { email, password }\n */\nexport const logIn = createAsyncThunk(\n  'auth/login',\n  async (credentials, thunkAPI) => {\n    try {\n      const res = await axios.post('/users/login', credentials);\n      // After successful login, add the token to the HTTP header\n      setAuthHeader(res.data.token);\n      return res.data;\n    } catch (error) {\n      return thunkAPI.rejectWithValue(error.message);\n    }\n  }\n);\n\n/*\n * POST @ /users/logout\n * headers: Authorization: Bearer token\n */\nexport const logOut = createAsyncThunk('auth/logout', async (_, thunkAPI) => {\n  try {\n    await axios.post('/users/logout');\n    // After a successful logout, remove the token from the HTTP header\n    clearAuthHeader();\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error.message);\n  }\n});\n\n/*\n * GET @ /users/current\n * headers: Authorization: Bearer token\n */\nexport const refreshUser = createAsyncThunk(\n  'auth/refresh',\n  async (_, thunkAPI) => {\n    // Reading the token from the state via getState()\n    const state = thunkAPI.getState();\n    const persistedToken = state.auth.token;\n\n    if (persistedToken === null) {\n      // If there is no token, exit without performing any request\n      return thunkAPI.rejectWithValue('Unable to fetch user');\n    }\n\n    try {\n      // If there is a token, add it to the HTTP header and perform the request\n      setAuthHeader(persistedToken);\n      const res = await axios.get('/users/me');\n      return res.data;\n    } catch (error) {\n      return thunkAPI.rejectWithValue(error.message);\n    }\n  }\n);\n"],"names":["RegisterForm","dispatch","useDispatch","className","css","onSubmit","e","preventDefault","form","currentTarget","register","name","elements","value","email","password","reset","autoComplete","type","Register","axios","setAuthHeader","token","createAsyncThunk","credentials","thunkAPI","res","data","rejectWithValue","message","logIn","_","state","getState","persistedToken","auth"],"sourceRoot":""}